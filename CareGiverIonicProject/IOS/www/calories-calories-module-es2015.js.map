{"version":3,"sources":["./src/app/home/vital/calories/calories.page.html","./src/app/home/vital/calories/calories-routing.module.ts","./src/app/home/vital/calories/calories.module.ts","./src/app/home/vital/calories/calories.page.scss","./src/app/home/vital/calories/calories.page.ts"],"names":[],"mappings":"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","file":"calories-calories-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button [routerLink]=\\\"['/vital']\\\" style=\\\"color: white;\\\">Back</ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Calories</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding><br>\\n  <ion-row row-1>\\n    <!--<ion-title (click)=\\\"getData(yesterday)\\\">Yesterday</ion-title>\\n    <ion-title (click)=\\\"getData(today)\\\" style=\\\"text-align: right;\\\">Today</ion-title>-->\\n  </ion-row>\\n  <ion-grid class=\\\"alignAll\\\">\\n  <ion-card class=\\\"welcome-card\\\">\\n      <h3 style=\\\"color: black;\\\">Calories Burned:</h3>\\n      <ion-list>\\n        <!--<p>Date: {{calendarDate}}</p>-->\\n        <p>Active Calories: {{activeKilocalories}} calories</p>\\n        <p>Rest Calories: {{bmrKilocalories}} calories</p>\\n        <p>Total Calories: {{totalKilocalories}} calories</p>\\n      </ion-list>\\n  </ion-card>\\n  <ion-row>\\n    <ion-col>\\n      <ion-card class=\\\"welcome-card\\\">\\n        <ion-card-header>\\n          <h4>Calories Rate Change</h4>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <canvas #barChart></canvas>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n</ion-content>\\n\"","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CaloriesPage} from './calories.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CaloriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CaloriesPageRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {CaloriesPageRoutingModule} from './calories-routing.module';\n\nimport {CaloriesPage} from './calories.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CaloriesPageRoutingModule\n  ],\n  declarations: [CaloriesPage]\n})\nexport class CaloriesPageModule {\n}\n","module.exports = \"ion-content {\\n  --background: white;\\n}\\n\\nion-toolbar {\\n  --background: rgb(7, 156, 161);\\n  color: white;\\n}\\n\\nion-list {\\n  background: rgba(0, 0, 255, 0);\\n  color: black;\\n}\\n\\np {\\n  font-size: larger;\\n  margin-left: 20px;\\n}\\n\\n.welcome-card {\\n  max-width: 40em;\\n  margin: 0 auto;\\n}\\n\\nion-grid.alignAll {\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RldmVsb3BtZW50L0NhcmVHaXZlci9DYXJlR2l2ZXJJb25pY1Byb2plY3QvSU9TL3NyYy9hcHAvaG9tZS92aXRhbC9jYWxvcmllcy9jYWxvcmllcy5wYWdlLnNjc3MiLCJzcmMvYXBwL2hvbWUvdml0YWwvY2Fsb3JpZXMvY2Fsb3JpZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUNDRjs7QURFQTtFQUNFLDhCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsOEJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxlQUFBO0VBQ0EsY0FBQTtBQ0NGOztBRENBO0VBQ0UsY0FBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvaG9tZS92aXRhbC9jYWxvcmllcy9jYWxvcmllcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogd2hpdGU7IC8vIHVybCguLi8uLi8uLi8uLi9hc3NldHMvYm90YW5pY2EuanBnKSAwIDAvMTAwJSAxMDAlIHJlcGVhdDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHJnYig3LCAxNTYsIDE2MSk7IC8vIHVybCguLi8uLi8uLi8uLi9hc3NldHMvdG9vbGJhci5qcGcpIDAgMC8xMDAlIDEwMCUgcmVwZWF0O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmlvbi1saXN0IHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAyNTUsIDApO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbnAge1xuICBmb250LXNpemU6IGxhcmdlcjtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbi53ZWxjb21lLWNhcmR7XG4gIG1heC13aWR0aDogNDBlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5pb24tZ3JpZC5hbGlnbkFsbHtcbiAgbWFyZ2luOiAwIGF1dG87XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG5pb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogcmdiKDcsIDE1NiwgMTYxKTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5pb24tbGlzdCB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMjU1LCAwKTtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5wIHtcbiAgZm9udC1zaXplOiBsYXJnZXI7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4ud2VsY29tZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MGVtO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuaW9uLWdyaWQuYWxpZ25BbGwge1xuICBtYXJnaW46IDAgYXV0bztcbn0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../../../user.service';\nimport {GarminService} from '../../../garmin.service';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Chart} from 'chart.js';\nimport { AuthService } from 'src/app/auth.service';\n\n\n@Component({\n  selector: 'app-calories',\n  templateUrl: './calories.page.html',\n  styleUrls: ['./calories.page.scss'],\n})\nexport class CaloriesPage implements OnInit {\n  public firebaseAuth: AngularFireAuth;\n  @ViewChild('barChart', {static: false}) barChart;\n  bars: any;\n  public calendarDate: string;\n  public activeKilocalories = 0;\n  public bmrKilocalories = 0;\n  public totalKilocalories = 0;\n\n  constructor(\n    private user: UserService,\n    private garmin: GarminService,\n    public afAuth: AngularFireAuth,\n    private auth: AuthService) {\n    this.firebaseAuth = afAuth;\n    let gId;\n    gId =  this.user.garminId;\n    this.showData(gId);\n    console.log('garminId', gId);\n  }\n\n  ngOnInit() {\n  }\n\n  async showData(garminId) {\n    let garminData;\n    if (garminId) {\n      this.garmin.getGarminDataset(garminId).subscribe(data => {\n        garminData = data;\n        const dailiesDataset = [];\n        if (garminData) {\n          const caloriesData = [];\n          const dateData = [];\n          for (const item of garminData) {\n            if (item) {\n              const caloriesItem = item.dailies;\n              if (caloriesItem) {\n                dailiesDataset.push(item.dailies);\n                caloriesData.push(item.dailies.activeKilocalories + item.dailies.bmrKilocalories);\n                dateData.push(item.dailies.calendarDate);\n              }\n            }\n          }\n          this.createLineChart(caloriesData, dateData);\n        }\n        if (dailiesDataset.length > 0) {\n          const sortedDataSet = dailiesDataset.sort((a, b) =>{\n            if(a.calendarDate < b.calendarDate) {\n              return 1\n            } else if(a.calendarDate > b.calendarDate) {\n              return -1\n            } else {\n              return 0\n            }\n          });\n          \n          this.calendarDate = sortedDataSet[0].calendarDate;\n          this.activeKilocalories = sortedDataSet[0].activeKilocalories;\n          this.bmrKilocalories = sortedDataSet[0].bmrKilocalories;\n          this.totalKilocalories = Number(this.activeKilocalories) + Number(this.bmrKilocalories);\n        }\n      });\n      // tslint:disable-next-line: only-arrow-functions\n      setTimeout(function() {\n      }, 1000, []);\n    }\n  }\n\n\n  createLineChart(dataset: number[], date: string[]) {\n    const labelData = [];\n    // tslint:disable-next-line: forin\n    for (const item in dataset) {\n      labelData.push('');\n    }\n    this.bars = new Chart(this.barChart.nativeElement, {\n      type: 'bar',\n      data: {\n        labels: date,\n        datasets: [{\n          label: 'Total Calories per Day',\n          data: dataset,\n          backgroundColor: 'rgb(38, 194, 129)', // array should have same number of elements as number of dataset\n          borderColor: 'royalblue', // array should have same number of elements as number of dataset\n          borderWidth: 1,\n        //  pointBorderColor: 'royalblue',\n        //  pointBorderWidth: 1,\n        //  pointBackgroundColor: 'royalblue'\n        }]\n      },\n      options: {\n        plugins: {\n          filler: {\n            propagate: true\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n}\n"],"sourceRoot":""}