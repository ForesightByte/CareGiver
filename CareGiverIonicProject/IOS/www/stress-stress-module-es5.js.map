{"version":3,"sources":["./src/app/home/vital/stress/stress.page.html","./src/app/home/vital/stress/stress-routing.module.ts","./src/app/home/vital/stress/stress.module.ts","./src/app/home/vital/stress/stress.page.scss","./src/app/home/vital/stress/stress.page.ts"],"names":[],"mappings":"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","file":"stress-stress-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button [routerLink]=\\\"['/vital']\\\" style=\\\"color: white;\\\">Back</ion-button>\\n        </ion-buttons>\\n        <ion-title style=\\\"text-align: center;\\\">Stress</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding><br>\\n    <ion-row row-1>\\n        <!--<ion-title (click)=\\\"getData(yesterday)\\\">Yesterday</ion-title>\\n        <ion-title (click)=\\\"getData(today)\\\" style=\\\"text-align: right;\\\">Today</ion-title>-->\\n    </ion-row>\\n    <ion-card class=\\\"welcome-card\\\">\\n        <ion-grid>\\n            <h3 style=\\\"color: black;\\\">Stress:</h3>\\n            <ion-list>\\n                <!--<p>Date: {{calendarDate}}</p>-->\\n                <p>Avg. Stress Level: {{averageStressLevel}}</p>\\n                <p>Max. Stress Level: {{maxStressLevel}}</p>\\n                <p>Stress Duration: {{stressDurationInSeconds}}</p>\\n            </ion-list>\\n        </ion-grid>\\n    </ion-card>\\n    <ion-row>\\n        <ion-col>\\n            <ion-card class=\\\"welcome-card\\\">\\n                <ion-card-header>\\n                    <h4>Average Stress Level Change</h4>\\n                </ion-card-header>\\n                <ion-card-content>\\n                    <canvas #barChart></canvas>\\n                </ion-card-content>\\n            </ion-card>\\n        </ion-col>\\n    </ion-row>\\n</ion-content>\\n\"","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {StressPage} from './stress.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StressPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StressPageRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {StressPageRoutingModule} from './stress-routing.module';\n\nimport {StressPage} from './stress.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StressPageRoutingModule\n  ],\n  declarations: [StressPage]\n})\nexport class StressPageModule {\n}\n","module.exports = \"ion-content {\\n  --background: white;\\n}\\n\\nion-toolbar {\\n  --background: rgb(7, 156, 161);\\n  color: white;\\n}\\n\\nion-list {\\n  background: rgba(0, 0, 255, 0);\\n  color: black;\\n}\\n\\np {\\n  font-size: larger;\\n  margin-left: 20px;\\n}\\n\\n.welcome-card {\\n  max-width: 40em;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RldmVsb3BtZW50L0NhcmVHaXZlci9DYXJlR2l2ZXJJb25pY1Byb2plY3QvSU9TL3NyYy9hcHAvaG9tZS92aXRhbC9zdHJlc3Mvc3RyZXNzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS92aXRhbC9zdHJlc3Mvc3RyZXNzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSw4QkFBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLDhCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvdml0YWwvc3RyZXNzL3N0cmVzcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogd2hpdGU7IC8vIHVybCguLi8uLi8uLi8uLi9hc3NldHMvYm90YW5pY2EuanBnKSAwIDAvMTAwJSAxMDAlIHJlcGVhdDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHJnYig3LCAxNTYsIDE2MSk7IC8vIHVybCguLi8uLi8uLi8uLi9hc3NldHMvdG9vbGJhci5qcGcpIDAgMC8xMDAlIDEwMCUgcmVwZWF0O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmlvbi1saXN0IHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAyNTUsIDApO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbnAge1xuICBmb250LXNpemU6IGxhcmdlcjtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbi53ZWxjb21lLWNhcmR7XG4gIG1heC13aWR0aDogNDBlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG5pb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogcmdiKDcsIDE1NiwgMTYxKTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5pb24tbGlzdCB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMjU1LCAwKTtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5wIHtcbiAgZm9udC1zaXplOiBsYXJnZXI7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4ud2VsY29tZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MGVtO1xuICBtYXJnaW46IDAgYXV0bztcbn0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Chart} from 'chart.js';\nimport {UserService} from 'src/app/user.service';\nimport {GarminService} from 'src/app/garmin.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from 'src/app/auth.service';\n\n\n@Component({\n    selector: 'app-stress',\n    templateUrl: './stress.page.html',\n    styleUrls: ['./stress.page.scss'],\n})\nexport class StressPage implements OnInit {\n    public firebaseAuth: AngularFireAuth;\n    @ViewChild('barChart', {static: false}) barChart;\n    bars: any;\n    public calendarDate: string;\n    public averageStressLevel: number;\n    public maxStressLevel: number;\n    public stressDurationInSeconds: string;\n    public highStressDurationInSeconds: string;\n    public mediumStressDurationInSeconds: string;\n\n    public uid: string;\n    private garminId: string;\n\n    constructor(\n      private afStore: AngularFirestore,\n      public auth: AuthService,\n      private user: UserService,\n      private garmin: GarminService,\n      public afAuth: AngularFireAuth) {\n        this.firebaseAuth = afAuth;\n        this.uid = auth.cUid;\n        console.log('uid', this.uid);\n        this.garminId = this.user.garminId;\n        console.log('garminId', this.garminId);\n    }\n\n    ngOnInit() {\n        this.showData();\n    }\n\n    async showData() {\n        let garminData;\n        if (this.garminId) {\n            this.garmin.getGarminDataset(this.garminId).subscribe(data => {\n                garminData = data;\n                const dailiesDataset = [];\n                if (garminData) {\n                    const averageStressData = [];\n                    const dateData = [];\n                    for (const item of garminData) {\n                        if (item.dailies) {\n                            dailiesDataset.push(item.dailies);\n                            averageStressData.push(item.dailies.averageStressLevel);\n                            dateData.push(item.dailies.calendarDate);\n                        }\n                    }\n                    this.createLineChart(averageStressData, dateData);\n                }\n                if (dailiesDataset.length > 0) {\n                    const sortedDataSet = dailiesDataset.sort((a, b) =>{\n                        if(a.calendarDate < b.calendarDate) {\n                          return 1\n                        } else if(a.calendarDate > b.calendarDate) {\n                          return -1\n                        } else {\n                          return 0\n                        }\n                      });\n                      \n                    this.calendarDate = sortedDataSet[0].calendarDate;\n                    this.averageStressLevel = sortedDataSet[0].averageStressLevel;\n                    this.maxStressLevel = sortedDataSet[0].maxStressLevel;\n                    this.stressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].stressDurationInSeconds);\n                    this.highStressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].highStressDurationInSeconds);\n                    this.mediumStressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].mediumStressDurationInSeconds);\n\n                    let stress = 0;\n                    if(this.averageStressLevel == -1) {\n                        stress = 0;\n                    } else{\n                        stress = this.averageStressLevel;\n                    }\n                    this.afStore.doc(`users/${this.uid}`).set({stress: stress}, {merge: true});\n                }\n            });\n            // tslint:disable-next-line: only-arrow-functions\n            setTimeout(function () {\n            }, 1000, []);\n        }\n    }\n\n    public secondsToHMS(seconds): string {\n        const h = Math.floor(seconds / 3600);\n        const m = Math.floor(seconds % 3600 / 60);\n        const hms = h + ' hr ' + m + ' m';\n        return hms;\n      }\n\n    createLineChart(dataset: number[], date: string[]) {\n        const labelData = [];\n        // tslint:disable-next-line: forin\n        for (const item in dataset) {\n            labelData.push('');\n        }\n        this.bars = new Chart(this.barChart.nativeElement, {\n            type: 'bar',\n            data: {\n                labels: date,\n                datasets: [{\n                    label: 'Average Stress level per Day',\n                    data: dataset,\n                    backgroundColor: 'rgb(38, 194, 129)', // array should have same number of elements as number of dataset\n                    borderColor: 'royalblue', // array should have same number of elements as number of dataset\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                plugins: {\n                    filler: {\n                        propagate: true\n                    }\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        });\n    }\n}\n"],"sourceRoot":""}