{"version":3,"sources":["./src/app/home/vital/stress/stress.page.html","./src/app/home/vital/stress/stress-routing.module.ts","./src/app/home/vital/stress/stress.module.ts","./src/app/home/vital/stress/stress.page.scss","./src/app/home/vital/stress/stress.page.ts"],"names":[],"mappings":"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","file":"stress-stress-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button defaultHref=\\\"/vital\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title style=\\\"text-align: center;\\\">Stress</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding><br>\\r\\n    <ion-row row-1>\\r\\n        <!--<ion-title (click)=\\\"getData(yesterday)\\\">Yesterday</ion-title>\\r\\n        <ion-title (click)=\\\"getData(today)\\\" style=\\\"text-align: right;\\\">Today</ion-title>-->\\r\\n    </ion-row>\\r\\n    <ion-card class=\\\"welcome-card\\\">\\r\\n        <ion-grid>\\r\\n            <ion-title style=\\\"color: black;\\\">Stress:</ion-title>\\r\\n            <ion-list>\\r\\n                <!--<p>Date: {{calendarDate}}</p>-->\\r\\n                <p>Avg. Stress Level: {{averageStressLevel}}</p>\\r\\n                <p>Max. Stress Level: {{maxStressLevel}}</p>\\r\\n                <p>Stress Duration: {{stressDurationInSeconds}}</p>\\r\\n            </ion-list>\\r\\n        </ion-grid>\\r\\n    </ion-card>\\r\\n    <ion-row>\\r\\n        <ion-col>\\r\\n            <ion-card class=\\\"welcome-card\\\">\\r\\n                <ion-card-header>\\r\\n                    <ion-card-title>Average Stress Level Change</ion-card-title>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content>\\r\\n                    <canvas #barChart></canvas>\\r\\n                </ion-card-content>\\r\\n            </ion-card>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-content>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {StressPage} from './stress.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StressPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StressPageRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {StressPageRoutingModule} from './stress-routing.module';\r\n\r\nimport {StressPage} from './stress.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    StressPageRoutingModule\r\n  ],\r\n  declarations: [StressPage]\r\n})\r\nexport class StressPageModule {\r\n}\r\n","module.exports = \"ion-content {\\n  --background: white;\\n}\\n\\nion-toolbar {\\n  --background: rgb(7, 156, 161);\\n  color: white;\\n}\\n\\nion-list {\\n  background: rgba(0, 0, 255, 0);\\n  color: black;\\n}\\n\\np {\\n  font-size: larger;\\n  margin-left: 20px;\\n}\\n\\n.welcome-card {\\n  max-width: 40em;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS92aXRhbC9zdHJlc3MvRjpcXElvbmljUHJvamVjdFxcR2l0XFxDYXJlR2l2ZXJcXENhcmVHaXZlcklvbmljUHJvamVjdC9zcmNcXGFwcFxcaG9tZVxcdml0YWxcXHN0cmVzc1xcc3RyZXNzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS92aXRhbC9zdHJlc3Mvc3RyZXNzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSw4QkFBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLDhCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvdml0YWwvc3RyZXNzL3N0cmVzcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTsgLy8gdXJsKC4uLy4uLy4uLy4uL2Fzc2V0cy9ib3RhbmljYS5qcGcpIDAgMC8xMDAlIDEwMCUgcmVwZWF0O1xyXG59XHJcblxyXG5pb24tdG9vbGJhciB7XHJcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoNywgMTU2LCAxNjEpOyAvLyB1cmwoLi4vLi4vLi4vLi4vYXNzZXRzL3Rvb2xiYXIuanBnKSAwIDAvMTAwJSAxMDAlIHJlcGVhdDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1saXN0IHtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDI1NSwgMCk7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG5wIHtcclxuICBmb250LXNpemU6IGxhcmdlcjtcclxuICBtYXJnaW4tbGVmdDogMjBweDtcclxufVxyXG5cclxuLndlbGNvbWUtY2FyZHtcclxuICBtYXgtd2lkdGg6IDQwZW07XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn0iLCJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoNywgMTU2LCAxNjEpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmlvbi1saXN0IHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAyNTUsIDApO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbnAge1xuICBmb250LXNpemU6IGxhcmdlcjtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbi53ZWxjb21lLWNhcmQge1xuICBtYXgtd2lkdGg6IDQwZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport {Chart} from 'chart.js';\r\nimport {UserService} from 'src/app/user.service';\r\nimport {GarminService} from 'src/app/garmin.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-stress',\r\n    templateUrl: './stress.page.html',\r\n    styleUrls: ['./stress.page.scss'],\r\n})\r\nexport class StressPage implements OnInit {\r\n    public firebaseAuth: AngularFireAuth;\r\n    @ViewChild('barChart', {static: false}) barChart;\r\n    bars: any;\r\n    public calendarDate: string;\r\n    public averageStressLevel: number;\r\n    public maxStressLevel: number;\r\n    public stressDurationInSeconds: string;\r\n    public highStressDurationInSeconds: string;\r\n    public mediumStressDurationInSeconds: string;\r\n\r\n    private garminId: string;\r\n\r\n    constructor(\r\n      private user: UserService,\r\n      private garmin: GarminService,\r\n      public afAuth: AngularFireAuth) {\r\n        this.firebaseAuth = afAuth;\r\n        this.garminId = this.user.garminId;\r\n        console.log('garminId', this.garminId);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.showData();\r\n    }\r\n\r\n    async showData() {\r\n        let garminData;\r\n        if (this.garminId) {\r\n            this.garmin.getGarminDataset(this.garminId).subscribe(data => {\r\n                garminData = data;\r\n                const dailiesDataset = [];\r\n                if (garminData) {\r\n                    const averageStressData = [];\r\n                    const dateData = [];\r\n                    for (const item of garminData) {\r\n                        if (item.dailies) {\r\n                            dailiesDataset.push(item.dailies);\r\n                            averageStressData.push(item.dailies.averageStressLevel);\r\n                            dateData.push(item.dailies.calendarDate);\r\n                        }\r\n                    }\r\n                    this.createLineChart(averageStressData, dateData);\r\n                }\r\n                if (dailiesDataset.length > 0) {\r\n                    const sortedDataSet = dailiesDataset.sort((a, b) =>{\r\n                        if(a.calendarDate < b.calendarDate) {\r\n                          return 1\r\n                        } else if(a.calendarDate > b.calendarDate) {\r\n                          return -1\r\n                        } else {\r\n                          return 0\r\n                        }\r\n                      });\r\n                      \r\n                    this.calendarDate = sortedDataSet[0].calendarDate;\r\n                    this.averageStressLevel = sortedDataSet[0].averageStressLevel;\r\n                    this.maxStressLevel = sortedDataSet[0].maxStressLevel;\r\n                    this.stressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].stressDurationInSeconds);\r\n                    this.highStressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].highStressDurationInSeconds);\r\n                    this.mediumStressDurationInSeconds = this.secondsToHMS(sortedDataSet[0].mediumStressDurationInSeconds);\r\n                }\r\n            });\r\n            // tslint:disable-next-line: only-arrow-functions\r\n            setTimeout(function () {\r\n            }, 1000, []);\r\n        }\r\n    }\r\n\r\n    public secondsToHMS(seconds): string {\r\n        const h = Math.floor(seconds / 3600);\r\n        const m = Math.floor(seconds % 3600 / 60);\r\n        const hms = h + ' hr ' + m + ' m';\r\n        return hms;\r\n      }\r\n\r\n    createLineChart(dataset: number[], date: string[]) {\r\n        const labelData = [];\r\n        // tslint:disable-next-line: forin\r\n        for (const item in dataset) {\r\n            labelData.push('');\r\n        }\r\n        this.bars = new Chart(this.barChart.nativeElement, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: date,\r\n                datasets: [{\r\n                    label: 'Average Stress level per Day',\r\n                    data: dataset,\r\n                    backgroundColor: 'rgb(38, 194, 129)', // array should have same number of elements as number of dataset\r\n                    borderColor: 'royalblue', // array should have same number of elements as number of dataset\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}