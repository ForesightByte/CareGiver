{"version":3,"sources":["./node_modules/@angular/fire/database/es2015/database.js","./node_modules/@angular/fire/database/es2015/database.module.js","./node_modules/@angular/fire/database/es2015/index.js","./node_modules/@angular/fire/database/es2015/list/audit-trail.js","./node_modules/@angular/fire/database/es2015/list/changes.js","./node_modules/@angular/fire/database/es2015/list/create-reference.js","./node_modules/@angular/fire/database/es2015/list/data-operation.js","./node_modules/@angular/fire/database/es2015/list/remove.js","./node_modules/@angular/fire/database/es2015/list/snapshot-changes.js","./node_modules/@angular/fire/database/es2015/list/state-changes.js","./node_modules/@angular/fire/database/es2015/list/utils.js","./node_modules/@angular/fire/database/es2015/object/create-reference.js","./node_modules/@angular/fire/database/es2015/object/snapshot-changes.js","./node_modules/@angular/fire/database/es2015/observable/fromRef.js","./node_modules/@angular/fire/database/es2015/public_api.js","./node_modules/@angular/fire/database/es2015/utils.js","./node_modules/firebase/database/dist/index.esm.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,eAAe,SAAI,IAAI,SAAI;AAC3B,mCAAmC,oCAAoC;AACvE;AACkF;AACjD;AAC6B;AACI;AACkH;AACpL;AACA;AACA,8BAA8B,oEAAsB;AACpD,sCAAsC,oFAA8B;AACpE;AACA,wBAAwB,yEAAmB;AAC3C;AACA,SAAS;AACT;AACA;AACA,oBAAoB,qDAAM;AAC1B;AACA;AACA;AACA;AACA,eAAe,kFAAmB;AAClC;AACA;AACA,oBAAoB,qDAAM;AAC1B,eAAe,sFAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAU;AACd,eAAe,4DAAM,CAAC,8DAAgB;AACtC,eAAe,8DAAQ,gBAAgB,4DAAM,CAAC,+DAAiB;AAC/D,eAAe,8DAAQ,gBAAgB,4DAAM,CAAC,0DAAY;AAC1D,eAAe,4DAAM,CAAC,yDAAW;AACjC;AACA,QAAQ,oDAAM;AACd;AAC+B;AACmC;AAClE,oC;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACyC;AACQ;AACtB;AAC3B;AACA;AACA;AACA,IAAI,8DAAQ;AACZ,oBAAoB,6DAAmB;AACvC,KAAK;AACL;AACqC;AACrC,2C;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AAC7B,iC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACC;AACsB;AAC/D;AACP,wBAAwB,mEAAY;AACpC,cAAc,2DAAI;AAClB;AACA;AACA;AACA,WAAW,mEAAO;AAClB,cAAc,0DAAG;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,qEAAc,WAAW,0DAAG;AAC1C;AACA;AACA,gBAAgB;AAChB,KAAK,GAAG,gEAAS,8DAA8D,0DAAG;AAClF;AACA,uC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACf;AACA;AACsC;AAChE;AACP,WAAW,mEAAO,uCAAuC,gEAAS;AAClE,6BAA6B,+CAAE;AAC/B,iDAAiD,mEAAO;AACxD,eAAe,kDAAK,sBAAsB,2DAAI;AAC9C,KAAK,GAAG,2EAAoB;AAC5B;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACN;AACJ;AACkB;AACf;AACT;AAC9B;AACP;AACA;AACA;AACA,gBAAgB,iFAAyB;AACzC,aAAa,iFAAyB;AACtC;AACA,gBAAgB,kEAAkB;AAClC;AACA,mBAAmB,yEAAe;AAClC,SAAS;AACT;AACA,mBAAmB,mEAAY;AAC/B,SAAS;AACT;AACA,mBAAmB,+DAAU;AAC7B,SAAS;AACT;AACA,qCAAqC,yEAAe;AACpD,4EAA4E,0DAAG;AAC/E;AACA;AACA;AACA,4C;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAA+C;AACxC;AACP;AACA,eAAe,kEAAmB;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAA+C;AACxC;AACP;AACA;AACA;AACA;AACA,eAAe,kEAAmB;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kC;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAwC;AACM;AACvC;AACP,aAAa,kEAAmB;AAChC,WAAW,4DAAW;AACtB;AACA,4C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACF;AACjB;AACtB;AACP,aAAa,kEAAmB;AAChC,4CAA4C,mEAAO;AACnD,WAAW,kDAAK;AAChB;AACA,yC;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAiC;AAC1B;AACP,QAAQ,oDAAK;AACb;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAqC;AAC4B;AAC1D;AACP;AACA;AACA;AACA,mBAAmB,qFAA2B;AAC9C,SAAS;AACT,sBAAsB,+BAA+B,EAAE;AACvD,mBAAmB,4BAA4B,EAAE;AACjD,kBAAkB,2BAA2B,EAAE;AAC/C;AACA,qCAAqC,qFAA2B;AAChE,4EAA4E,0DAAG;AAC/E,SAAS;AACT;AACA;AACA,4C;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAgD;AACzC;AACP;AACA,eAAe,mEAAO;AACtB;AACA;AACA,4C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAkD;AACN;AACrC,4DAA4D,mDAAc;AACjF,eAAe,+CAAU;AACzB;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,EAAE;AACtC;AACA,KAAK,OAAO,0DAAG;AACf,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK,GAAG,4DAAK;AACb;AACA,mC;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACI;AACS;AACA;AACH;AACF;AACE;AACH;AAClC,sC;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,YAAY;AAClF;AACA,iC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAA4B;AAC5B","file":"default~home-home-module~home-profile-profile-module-es2015.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { RealtimeDatabaseURL, FIREBASE_OPTIONS, FIREBASE_APP_NAME, DATABASE_URL, _firebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nlet AngularFireDatabase = class AngularFireDatabase {\n    constructor(options, nameOrConfig, databaseURL, platformId, zone) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n        this.database = zone.runOutsideAngular(() => {\n            const app = _firebaseAppFactory(options, zone, nameOrConfig);\n            return app.database(databaseURL || undefined);\n        });\n    }\n    list(pathOrRef, queryFn) {\n        const ref = getRef(this.database, pathOrRef);\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = getRef(this.database, pathOrRef);\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        return this.database.ref().push().key;\n    }\n};\nAngularFireDatabase = __decorate([\n    Injectable(),\n    __param(0, Inject(FIREBASE_OPTIONS)),\n    __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)),\n    __param(2, Optional()), __param(2, Inject(DATABASE_URL)),\n    __param(3, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object,\n        NgZone])\n], AngularFireDatabase);\nexport { AngularFireDatabase };\nexport { RealtimeDatabaseURL, DATABASE_URL, DATABASE_URL as URL };\n//# sourceMappingURL=database.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\nimport 'firebase/database';\nlet AngularFireDatabaseModule = class AngularFireDatabaseModule {\n};\nAngularFireDatabaseModule = __decorate([\n    NgModule({\n        providers: [AngularFireDatabase]\n    })\n], AngularFireDatabaseModule);\nexport { AngularFireDatabaseModule };\n//# sourceMappingURL=database.module.js.map","export * from './public_api';\n//# sourceMappingURL=index.js.map","import { stateChanges } from './state-changes';\nimport { fromRef } from '../observable/fromRef';\nimport { skipWhile, withLatestFrom, map, scan } from 'rxjs/operators';\nexport function auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        let lastKeyToLoad;\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), map(([loaded, actions]) => {\n        let lastKeyToLoad = loaded.lastKeyToLoad;\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), map(meta => meta.actions));\n}\n//# sourceMappingURL=audit-trail.js.map","import { fromRef } from '../observable/fromRef';\nimport { of, merge } from 'rxjs';\nimport { isNil } from '../utils';\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\nexport function listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, type, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        default:\n            return current;\n    }\n}\n//# sourceMappingURL=changes.js.map","import { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { map } from 'rxjs/operators';\nexport function createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    return {\n        query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: (data) => query.ref.push(data),\n        remove: createRemoveMethod(query.ref),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        valueChanges(events) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map(actions => actions.map(a => a.payload.val())));\n        }\n    };\n}\n//# sourceMappingURL=create-reference.js.map","import { checkOperationCases } from '../utils';\nexport function createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n//# sourceMappingURL=data-operation.js.map","import { checkOperationCases } from '../utils';\nexport function createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n//# sourceMappingURL=remove.js.map","import { listChanges } from './changes';\nimport { validateEventsArray } from './utils';\nexport function snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n//# sourceMappingURL=snapshot-changes.js.map","import { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { merge } from 'rxjs';\nexport function stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n//# sourceMappingURL=state-changes.js.map","import { isNil } from '../utils';\nexport function validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n//# sourceMappingURL=utils.js.map","import { map } from 'rxjs/operators';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nexport function createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n//# sourceMappingURL=create-reference.js.map","import { fromRef } from '../observable/fromRef';\nexport function createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n//# sourceMappingURL=snapshot-changes.js.map","import { Observable, asyncScheduler } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nexport function fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType == 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType == 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return { unsubscribe() { } };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n//# sourceMappingURL=fromRef.js.map","export * from './database';\nexport * from './list/changes';\nexport * from './list/create-reference';\nexport * from './list/snapshot-changes';\nexport * from './list/state-changes';\nexport * from './list/audit-trail';\nexport * from './observable/fromRef';\nexport * from './database.module';\n//# sourceMappingURL=public_api.js.map","export function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function getRef(database, pathRef) {\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nexport function checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n//# sourceMappingURL=utils.js.map","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}